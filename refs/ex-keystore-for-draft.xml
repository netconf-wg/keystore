<keystore xmlns="urn:ietf:params:xml:ns:yang:ietf-keystore">

  <!-- private keys and associated certificates -->
  <keys>
    <key>
      <name>ex-rsa-key</name>
      <algorithm-identifier>rsa1024</algorithm-identifier>
      <private-key>Base64-encoded RSA Private Key</private-key>
      <public-key>Base64-encoded RSA Public Key</public-key>
      <certificates>
        <certificate>
          <name>ex-rsa-cert</name>
          <value>Base64-encoded PKCS#7</value>
        </certificate>
      </certificates>
    </key>
 
    <key>
      <name>tls-ec-key</name>
      <algorithm-identifier>secp256r1</algorithm-identifier>
      <private-key>Base64-encoded EC Private Key</private-key>
      <public-key>Base64-encoded EC Public Key</public-key>
      <certificates>
        <certificate>
          <name>tls-ec-cert</name>
          <value>Base64-encoded PKCS#7</value>
        </certificate>
      </certificates>
    </key>

    <key>
      <name>tpm-protected-key</name>
      <algorithm-identifier>rsa2048</algorithm-identifier>
      <private-key>Base64-encoded RSA Private Key</private-key>
      <public-key>Base64-encoded RSA Public Key</public-key>
      <certificates>
        <certificate>
          <name>builtin-idevid-cert</name>
          <value>Base64-encoded PKCS#7</value>
        </certificate>
        <certificate>
          <name>my-ldevid-cert</name>
          <value>Base64-encoded PKCS#7</value>
        </certificate>
      </certificates>
    </key>
  </keys>

  <!-- trusted netconf/restconf client certificates -->
  <trusted-certificates>
    <name>explicitly-trusted-client-certs</name>
    <description>
      Specific client authentication certificates for explicitly
      trusted clients.  These are needed for client certificates
      that are not signed by a trusted CA.
    </description>
    <trusted-certificate>
      <name>George Jetson</name>
      <certificate>Base64-encoded X.509v3</certificate>
    </trusted-certificate>
  </trusted-certificates>

  <trusted-certificates>
    <name>explicitly-trusted-server-certs</name>
    <description>
      Specific server authentication certificates for explicitly
      trusted servers.  These are needed for server certificates
      that are not signed by a trusted CA.
    </description>
    <trusted-certificate>
      <name>Fred Flintstone</name>
      <certificate>Base64-encoded X.509v3</certificate>
    </trusted-certificate>
  </trusted-certificates>

  <!-- trust anchors (CA certs) for authenticating clients -->
  <trusted-certificates>
    <name>deployment-specific-ca-certs</name>
    <description>
      Trust anchors (i.e. CA certs) that are used to authenticate 
      client connections.  Clients are authenticated if their
      certificate has a chain of trust to one of these configured
      CA certificates.
    </description>
    <trusted-certificate>
      <name>ca.example.com</name>
      <certificate>Base64-encoded X.509v3</certificate>
    </trusted-certificate>
  </trusted-certificates>

  <!-- trust anchors for random HTTPS servers on Internet -->
  <trusted-certificates>
    <name>common-ca-certs</name>
    <description>
      Trusted certificates to authenticate common HTTPS servers.
      These certificates are similar to those that might be
      shipped with a web browser.
    </description>
    <trusted-certificate>
      <name>ex-certificate-authority</name>
      <certificate>Base64-encoded X.509v3</certificate>
    </trusted-certificate>
  </trusted-certificates>

  <!-- trusted SSH host keys -->
  <trusted-host-keys>
    <name>explicitly-trusted-ssh-host-keys</name>
    <description>
      Trusted SSH host keys used to authenticate SSH servers.
      These host keys would be analogous to those stored in
      a known_hosts file in OpenSSH.
    </description>
    <trusted-host-key>
      <name>corp-fw1</name>
      <host-key>Base64-encoded OneAsymmetricKey</host-key>
    </trusted-host-key>
  </trusted-host-keys>

</keystore>
