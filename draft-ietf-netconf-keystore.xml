<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc category="std"
     ipr="trust200902"
     docName="draft-ietf-netconf-keystore-latest" >
    <front>
      <title>A YANG Data Model for a Keystore</title>
        <author initials="K." surname="Watsen" fullname="Kent Watsen">
            <organization>Watsen Networks</organization>
            <address>
                <email>kent+ietf@watsen.net</email>
            </address>
        </author>
        <date/>
        <area>Operations</area>
        <workgroup>NETCONF Working Group</workgroup>
        <abstract>
            <t>This document defines a YANG 1.1 module called "ietf-keystore"
              that enables centralized configuration of both symmetric and
              asymmetric keys.  The secret value for both key types may be
              encrypted.  Asymmetric keys may be associated with certificates.
              Notifications are sent when certificates are about to expire.</t>
        </abstract>
        <note title="Editorial Note (To be removed by RFC Editor)">
          <t>This draft contains many placeholder values that need to be replaced
          with finalized values at the time of publication.  This note summarizes
          all of the substitutions that are needed.  No other RFC Editor 
          instructions are specified elsewhere in this document.</t>

          <t>Artwork in this document contains shorthand references to drafts in 
          progress.  Please apply the following replacements:
            <list  style="symbols">
              <t><spanx style="verb">VVVV</spanx> --&gt; the assigned RFC value for this draft</t>
            </list>
          </t>
          <t>Artwork in this document contains placeholder values for the date of publication of this
          draft.  Please apply the following replacement:
            <list  style="symbols">
              <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
            </list>
          </t>
          <t>The following Appendix section is to be removed prior to publication:
            <list  style="symbols">
              <t>Appendix A.  Change Log</t>
            </list>
          </t>
        </note>

    </front>
    <middle>

      <section title="Introduction">
        <t>This document defines a YANG 1.1 <xref target="RFC7950"/>  module called "ietf-keystore"
          that enables centralized configuration of both symmetric and
          asymmetric keys.  The secret value for both key types may be
          encrypted.  Asymmetric keys may be associated with certificates.
          Notifications are sent when certificates are about to expire.</t>

        <t>The "ietf-keystore" module defines many "grouping" statements
          intended for use by other modules that may import it.  For instance,
          there are groupings that defined enabling a key to be either configured
          locally (within the defining data model) or be a reference to a key
          in the keystore.
        </t>

        <t>Special consideration has been given for systems that have cryptographic
          hardware, such as a Trusted Protection Module (TPM).  These systems are
          unique in that the cryptographic hardware hides the secret key values.
          To support such hardware, symmetric keys may have the value "hidden-key"
          and asymmetric keys may have the value "hidden-private-key".  While how
          such keys are created or destroyed is outside the scope of this document,
          the keystore can contain entries for such keys, enabling them to be
          reference by other configuration elements.</t>

        <t>This document in compliant with Network Management Datastore Architecture
          (NMDA) <xref target="RFC8342"/>.  For instance, keys and associated
          certificates installed during manufacturing (e.g., for a IDevID 
          <xref target="Std-802.1AR-2009"/> certificate), it is expected that such
          data may appear only in &lt;operational&gt;.</t>

        <t>It is not required that a system has an operating system level
          keystore utility to implement this module.</t>
      </section>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
        "MAY", and "OPTIONAL" in this document are to be interpreted as
        described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
        when, and only when, they appear in all capitals, as shown here.</t>
      </section>

<!--
        <t>For the trusted-certificates list, Trust Anchor Format 
        <xref target="RFC5914"/> was evaluated and deemed inappropriate due
        to this document's need to also support pinning.  That is, pinning
        a client-certificate to support NETCONF over TLS client authentication.</t>
-->

      <section title="The Keystore Model">

        <section title="Tree Diagram">
          <t>This section provides a tree diagrams <xref target="RFC8340"/> for
          the "ietf-keystore" module that presents both the protocol-accessible
          "keystore" as well the all the groupings intended for external usage.</t>
<!--
          <t>This section provides two tree diagrams <xref target="RFC8340"/> for
          the "ietf-keystore" module, the first with used groupings expanded and the
          second with used groupings not expanded.  Both tree diagrams present 
          the protocol-accessible "keystore" as well the all the groupings intended
          for external usage.</t>
-->
          <t><!--The following tree diagram has used groupings expanded:-->
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-keystore-tree.txt)
]]></artwork>
            </figure>
          </t>
<!--
          <t>The following tree diagram does not have the used groupings expanded:
            <figure>
              <artwork><![CDATA[
INSERT_NO_TEXT_FROM_FILE(refs/ietf-keystore-tree-no-expand.txt)
]]></artwork>
            </figure>
          </t>
-->
        </section>
  
        <section title="Example Usage">

          <section title="A Keystore Instance">
            <t>The following example illustrates what a fully configured keystore
            might look like in &lt;operational&gt;, as described by Section 5.3 in
            <xref target="RFC8342"/>.  This datastore view illustrates data set by
            the manufacturing process alongside conventional configuration.  This
            keystore instance has four keys, two having one associated certificate,
            one having two associated certificates, and one empty key.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-keystore.xml)
]]></artwork>
              </figure>
            </t>
          </section>

          <section title="The &quot;generate-symmetric-key&quot; RPC">
            <t>The following example illustrates the "generate-symmetric-key" RPC.
            The key being referenced is defined in the keystore example above.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-symmetric-key-rpc.xml)
]]></artwork>
              </figure>
            </t>
            <t>Following is the complimentary RPC-reply.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-generate-symmetric-key-rpc-reply.xml)
]]></artwork>
              </figure>
            </t>
          </section>
          <!--
          <section title="The &quot;generate-asymmetric-key&quot; RPC">
            <t>The following example illustrates the "generate-asymmetric-key" RPC.
            The key being referenced is defined in the keystore example above.</t>
            <t>
              <figure>
                <artwork><![CDATA[
#NSERT_TEXT_FROM_FILE(refs/ex-generate-asymmetric-key-rpc.xml)
]]></artwork>
              </figure>
            </t>
            <t>Following is the complimentary RPC-reply.</t>
            <t>
              <figure>
                <artwork><![CDATA[
#NSERT_TEXT_FROM_FILE(refs/ex-generate-asymmetric-key-rpc-reply.xml)
]]></artwork>
              </figure>
            </t>
          </section>
          -->

          <section title="Notable Keystore Groupings">
            <t>The following non-normative module is used by subsequent examples
              to illustrate groupings defined in the ietf-crypto-types module.</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ex-keystore-usage.yang)
]]></artwork>
              </figure>
            </t>
            <t>The following example illustrates what two configured keys,
            one local and the other remote, might look like.  This example
            consistent with other examples above (i.e., the referenced key
            is in an example above).</t>
            <t>
              <figure>
                <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-keystore-usage.xml)
]]></artwork>
              </figure>
            </t>
          </section>
        </section>
  
        <section title="YANG Module" anchor="keystore-yang-module">
<!-- BEFORE MOVING GROUPINGS TO CRYPTO-TYPES
          <t>This YANG module imports modules defined in <xref target="RFC8341"/>,
          <xref target="RFC6991"/>, <xref target="RFC8341"/>,  and
          <xref target="I-D.ietf-netconf-crypto-types"/>.
          This module uses data types defined in <xref target="RFC2986"/>,
          <xref target="RFC5652"/>, <xref target="RFC5915"/>,
          <xref target="RFC6125"/>, <xref target="RFC8017"/>,
          and <xref target="ITU.X690.2015"/>.</t>
-->
          <t>This YANG module has normative references to <xref target="RFC8341"/>
          and <xref target="I-D.ietf-netconf-crypto-types"/>,
          and an informative reference to <xref target="RFC8342"/>.</t>

          <t>
            <figure>
              <preamble>&lt;CODE BEGINS&gt; file "ietf-keystore@YYYY-MM-DD.yang"</preamble>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(ietf-keystore@YYYY-MM-DD.yang)
]]></artwork>
              <postamble>&lt;CODE ENDS&gt;</postamble>
            </figure>
          </t>
        </section>
      </section>

      <section title="Security Considerations">

        <t>The YANG module defined in this document is designed to be accessed via YANG
        based management protocols, such as NETCONF <xref target="RFC6241"/> and
        RESTCONF <xref target="RFC8040"/>.  Both of these protocols have mandatory-to-implement
        secure transport layers (e.g., SSH, TLS) with mutual authentication.</t>
 
        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/> provides the means
        to restrict access for particular users to a pre-configured subset of all available
        protocol operations and content.</t>
 
        <t>There are a number of data nodes defined in this YANG module that are 
        writable/creatable/deletable (i.e., config true, which is the default). These data
        nodes may be considered sensitive or vulnerable in some network environments. Write
        operations (e.g., edit-config) to these data nodes without proper protection can
        have a negative effect on network operations. These are the subtrees and data nodes
        and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   /:">The entire data tree defined by this module is sensitive to
              write operations.  For instance, the addition or removal of keys, certificates,
              etc., can dramatically alter the implemented security policy.
              For this reason, the NACM extension "default-deny-write" has been set for the
              entire data tree.</t>
            <t hangText="   /keystore/asymmetric-keys/asymmetric-key/private-key:">When writing this node,
              implementations MUST ensure that the strength of the key being configured
              is not greater than the strength of the underlying secure transport 
              connection over which it is communicated.  Implementations SHOULD fail the 
              write-request if ever the strength of the private key is greater then
              the strength of the underlying transport, and alert the client that the
              strength of the key may have been compromised.  Additionally, when deleting
              this node, implementations SHOULD automatically (without explicit request)
              zeroize these keys in the most secure manner available, so as to prevent
              the remnants of their persisted storage locations from being analyzed in
              any meaningful way.</t>
          </list>
        </t>
 
        <t>Some of the readable data nodes in this YANG module may be considered sensitive
        or vulnerable in some network environments. It is thus important to control read 
        access (e.g., via get, get-config, or notification) to these data nodes. These are
        the subtrees and data nodes and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   /keystore/asymmetric-keys/asymmetric-key/private-key:">This node
              is additionally sensitive to read operations such that, in normal use cases,
              it should never be returned to a client.  The best reason for returning this
              node is to support backup/restore type workflows.  For this reason, the
              NACM extension "default-deny-all" has been set for this data node.</t>
          </list>
        </t>
      </section>

      <section title="IANA Considerations">
        <section title="The IETF XML Registry">
          <t>This document registers one URI in the "ns" subregistry of the
          IETF XML Registry <xref target="RFC3688"/>.  Following the format
          in <xref target="RFC3688"/>, the following registration is
          requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-keystore
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork>
            </figure>
          </t>
        </section>
        <section title="The YANG Module Names Registry">
          <t>This document registers one YANG module in the
          YANG Module Names registry <xref target="RFC6020"/>.
          Following the format in <xref target="RFC6020"/>, the
          the following registration is requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   name:         ietf-keystore
   namespace:    urn:ietf:params:xml:ns:yang:ietf-keystore
   prefix:       ks
   reference:    RFC VVVV

]]></artwork>
            </figure>
          </t>
        </section>
      </section>


    </middle>

    <back>
      <references title="Normative References">
        <?rfc include="reference.RFC.2119.xml"?>
        <?rfc include="reference.RFC.6020.xml"?>
        <?rfc include="reference.RFC.7950.xml"?>
        <?rfc include="reference.RFC.8341.xml"?>
        <?rfc include="reference.I-D.ietf-netconf-crypto-types"?>
      </references>
      <references title="Informative References">
        <?rfc include="reference.RFC.3688.xml"?>
        <?rfc include="reference.RFC.6241.xml"?>
        <?rfc include="reference.RFC.8040.xml"?>
        <?rfc include="reference.RFC.8174.xml"?>
        <?rfc include="reference.RFC.8340.xml"?>
        <?rfc include="reference.RFC.8342.xml"?>
        <reference anchor="Std-802.1AR-2009" target="http://standards.ieee.org/findstds/standard/802.1AR-2009.html">
            <front>
                <title>IEEE Standard for Local and metropolitan area networks - Secure Device Identity</title>
                <author fullname="WG802.1 - Higher Layer LAN Protocols Working Group">
                    <organization>IEEE SA-Standards Board</organization>
                </author>
                <date month="December" year="2009"/>
            </front>
        </reference>
      </references>

      <section title="Change Log">
        <section title="00 to 01">
          <t>
            <list style="symbols">
              <t>Replaced the 'certificate-chain' structures with PKCS#7 structures.
              (Issue #1)</t>
              <t>Added 'private-key' as a configurable data node, and removed the
              'generate-private-key' and 'load-private-key' actions.  (Issue #2)</t>
              <t>Moved 'user-auth-credentials' to the ietf-ssh-client module.
              (Issues #4 and #5)</t>
            </list>
          </t>
        </section>
        <section title="01 to 02">
          <t>
            <list style="symbols">
              <t>Added back 'generate-private-key' action.</t>
              <t>Removed 'RESTRICTED' enum from the 'private-key' leaf type.</t>
              <t>Fixed up a few description statements.</t>
            </list>
          </t>
        </section>
        <section title="02 to 03">
          <t>
            <list style="symbols">
              <t>Changed draft's title.</t>
              <t>Added missing references.</t>
              <t>Collapsed sections and levels.</t>
              <t>Added RFC 8174 to Requirements Language Section.</t>
              <t>Renamed 'trusted-certificates' to 'pinned-certificates'.</t>
              <t>Changed 'public-key' from config false to config true.</t>
              <t>Switched 'host-key' from OneAsymmetricKey to definition from RFC 4253.</t> 
            </list>
          </t>
        </section>
        <section title="03 to 04">
          <t>
            <list style="symbols">
              <t>Added typedefs around leafrefs to common keystore paths</t>
              <t>Now tree diagrams reference ietf-netmod-yang-tree-diagrams</t>
              <t>Removed Design Considerations section</t>
              <t>Moved key and certificate definitions from data tree to groupings</t>
            </list>
          </t>
        </section>
        <section title="04 to 05">
          <t>
            <list style="symbols">
              <t>Removed trust anchors (now in their own draft)</t>
              <t>Added back global keystore structure</t>
              <t>Added groupings enabling keys to either be locally defined or a reference to the keystore.</t>
            </list>
          </t>
        </section>
        <section title="05 to 06">
          <t>
            <list style="symbols">
              <t>Added feature "local-keys-supported"</t>
              <t>Added nacm:default-deny-all and nacm:default-deny-write</t>
              <t>Renamed generate-asymmetric-key to generate-hidden-key</t>
              <t>Added an install-hidden-key action</t>
              <t>Moved actions inside fo the "asymmetric-key" container</t>
              <t>Moved some groupings to draft-ietf-netconf-crypto-types</t>
            </list>
          </t>
        </section>
        <section title="06 to 07">
          <t>
            <list style="symbols">
              <t>Removed a "require-instance false"</t>
              <t>Clarified some description statements</t>
              <t>Improved the keystore-usage examples</t>
            </list>
          </t>
        </section>
        <section title="07 to 08">
          <t>
            <list style="symbols">
              <t>Added "local-definition" containers to avoid posibility of the
                action/notification statements being under a "case" statement.</t>
              <t>Updated copyright date, boilerplate template, affiliation,
                folding algorithm, and reformatted the YANG module.</t>
            </list>
          </t>
        </section>
        <section title="08 to 09">
          <t>
            <list style="symbols">
              <t>Added a 'description' statement to the 'must' in the
                /keystore/asymmetric-key node explaining that the descendent
                values may exist in &lt;operational&gt; only, and that
                implementation MUST assert that the values are either
                configured or that they exist in &lt;operational&gt;.</t>
              <t>Copied above 'must' statement (and description) into
                the local-or-keystore-asymmetric-key-grouping,
                local-or-keystore-asymmetric-key-with-certs-grouping,
                and local-or-keystore-end-entity-cert-with-key-grouping
                statements.</t>
            </list>
          </t>
        </section>
        <section title="09 to 10">
          <t>
            <list style="symbols">
              <t>Updated draft title to match new truststore draft title</t>
              <t>Moved everything under a top-level 'grouping' to enable use in other contexts.</t>
              <t>Renamed feature from 'local-keys-supported' to 'local-definitions-supported' (same name used in truststore)</t>
              <t>Removed the either-all-or-none 'must' expressions for the key's 3-tuple values (since the values are now 'mandatory true' in crypto-types)</t>
              <t>Example updated to reflect 'mandatory true' change in crypto-types draft</t>
            </list>
          </t>
        </section>
        <section title="10 to 11">
          <t>
            <list style="symbols">
              <t>Replaced typedef asymmetric-key-certificate-ref with grouping asymmetric-key-certificate-ref-grouping.</t>
              <t>Added feature feature 'key-generation'.</t>
              <t>Cloned groupings symmetric-key-grouping, asymmetric-key-pair-grouping,
                 asymmetric-key-pair-with-cert-grouping, and asymmetric-key-pair-with-certs-grouping
                 from crypto-keys, augmenting into each new case statements for values that
                 have been encrypted by other keys in the keystore.  Refactored keystore model
                 to use these groupings.</t>
              <t>Added new 'symmetric-keys' lists, as a sibling to the existing 'asymmetric-keys' list.</t>
              <t>Added RPCs (not actions) 'generate-symmetric-key' and 'generate-asymmetric-key' to
                 *return* a (potentially encrypted) key.</t>
            </list>
          </t>
        </section>
        <section title="11 to 12">
          <t>
            <list style="symbols">
              <t>Updated to reflect crypto-type's draft using enumerations over identities.</t>
              <t>Added examples for the 'generate-symmetric-key' and 'generate-asymmetric-key' RPCs.</t>
              <t>Updated the Introduction section.</t>
            </list>
          </t>
        </section>
      </section>

      <section title="Acknowledgements" numbered="no">
        <t>The authors would like to thank for following for
        lively discussions on list and in the halls (ordered
        by first name):
	      Alan Luchuk,
          Andy Bierman,
          Benoit Claise,
	      Bert Wijnen,
	      Balázs Kovács,
	      David Lamparter,
          Eric Voit,
	      Ladislav Lhotka,
	      Liang Xia,
	      Juergen Schoenwaelder,
          Mahesh Jethanandani,
          Martin Bjorklund,
          Mehmet Ersue,
          Phil Shafer,
	      Radek Krejci,
          Ramkumar Dhanapal,
          Reshad Rahman,
          Sean Turner,
          and Tom Petch.</t>
     </section>

    </back>
</rfc>

